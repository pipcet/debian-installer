<!-- retain these comments for translator revision tracking -->
<!-- $Id$ -->

  <sect2 arch="arm"><title>Three different ARM ports</title>

<para>
The ARM architecture has evolved over time and modern ARM processors
provide features which are not available in older models.  &debian;
therefore provides three ARM ports to give the best support for a very
wide range of different machines:
<itemizedlist>
  <listitem><para>
    &debian;/armel targets older 32-bit ARM processors without support
    for a hardware floating point unit (FPU),
  </para></listitem>
  <listitem><para>
    &debian;/armhf works only on newer 32-bit ARM processors which
    implement at least the ARMv7 architecture with version 3 of the
    ARM vector floating point specification (VFPv3). It makes use of
    the extended features and performance enhancements available on
    these models.
  </para></listitem>
  <listitem><para>
    &debian;/arm64 works on 64-bit ARM processors which implement at
    least the ARMv8 architecture.
  </para></listitem>
</itemizedlist>
</para>

<para>
Technically, all currently available ARM CPUs can be run in either
endian mode (big or little), but in practice the vast majority use
little-endian mode. All of &debian;/arm64, &debian;/armhf and
&debian;/armel support only little-endian systems.
</para>

  </sect2>

  <sect2 arch="arm"><title>Variations in ARM CPU designs and support complexity</title>

<para>
ARM systems are much more heterogeneous than those based on the
i386/amd64-based PC architecture, so the support situation can be much
more complicated.
</para>

<para arch="armel;armhf">
The ARM architecture is used mainly in so-called
<quote>system-on-chip</quote> (SoC) designs. These SoCs are designed
by many different companies with vastly varying hardware components
even for the very basic functionality required to bring the system
up. System firmware interfaces have been increasingly standardised
over time, but especially on older hardware firmware/boot interfaces
vary a great deal, so on these systems the Linux kernel has to take
care of many system-specific low-level issues which would be handled
by the mainboard's BIOS/UEFI in the PC world.
</para>

<para arch="armel;armhf">
At the beginning of the ARM support in the Linux kernel, the hardware
variety resulted in the requirement of having a separate kernel for
each ARM system in contrast to the <quote>one-fits-all</quote> kernel
for PC systems.  As this approach does not scale to a large number of
different systems, work was done to allow booting with a single ARM
kernel that can run on different ARM systems.  Support for newer ARM
systems is now implemented in a way that allows the use of such a
multiplatform kernel, but for several older systems a separate
specific kernel is still required. Because of this, the standard
&debian; distribution only supports installation on a selected number
of such older ARM systems, alongside the newer systems which are
supported by the ARM multiplatform kernels (called <quote>armmp</quote>) in
&debian;/armhf.
</para>

<para arch="arm64">
The ARM architecture is used mainly in so-called
<quote>system-on-chip</quote> (SoC) designs. These SoCs are designed
by many different companies, often with vastly varying hardware
components even for the very basic functionality required to bring the
system up. Older versions of the ARM architecture have seen massive
differences from one SoC to the next, but ARMv8 (arm64) is much more
standardised and so is easier for the Linux kernel and other software
to support.
</para>

<para arch="arm64">
Server versions of ARMv8 hardware are typically configured using the
Unified Extensible Firmware Interface (UEFI) and Advanced
Configuration and Power Interface (ACPI) standards. These two provide
common, device-independent ways to boot and configure computer
hardware. They are also common in the x86 PC world.
</para>

  </sect2>

<sect2 arch="arm64" id="arm64-supported-platforms"><title>Platforms supported by Debian/arm64</title>

  <para>
    Arm64/AArch64/ARMv8 hardware became available quite late in the
    &debian; &releasename-cap; release cycle so not many platforms had
    support merged in the mainline kernel version by the time of this
    release; this is the main requirement to have &d-i; working on
    them. The following platforms are known to be supported by
    &debian;/arm64 in this release. There is only one kernel image,
    which supports all the listed platforms.
  </para>

  <variablelist>
      <varlistentry>
        <term>Applied Micro (APM) Mustang/X-Gene</term>
        <listitem>
          <para>
	    The APM Mustang was the first Linux-capable ARMv8 system
	    available. It uses the X-gene SoC, which has since also
	    been used in other machines. It is an 8-core CPU, with
	    ethernet, USB and serial. A common form-factor looks just
	    like a desktop PC box, but many other versions are
	    expected in the future. Most of the hardware is supported
	    in the mainline kernel, but at this point USB support is
	    lacking in the &releasename-cap; kernel.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>ARM Juno Development Platform</term>
        <listitem>
          <para>	    
	    Juno is a capable development board with a 6-core (2xA57,
	    4xA53) ARMv8-A 800Mhz CPU, Mali (T624) graphics, 8GB DDR3
	    RAM, Ethernet, USB, Serial. It was designed for system
	    bring-up and power testing so is neither small nor cheap,
	    but was one of the first boards available. All the
	    on-board hardware is supported in the mainline kernel and
	    in &releasename-cap;.
          </para>
        </listitem>
      </varlistentry>

  </variablelist>

  <para>
    When using &d-i; on non-UEFI systems, you may have to manually
    make the system bootable at the end of the installation, e.g. by
    running the required commands in a shell started from within
    &d-i;. flash-kernel knows how to set up an X-Gene system booting
    with U-Boot.
  </para>

  <sect3 arch="arm64" id="arm64-other-platforms"><title>Other platforms</title>
  <para>
    The multiplatform support in the arm64 Linux kernel may also allow
    running &d-i; on arm64 systems not explicitly listed above. So
    long as the kernel used by &d-i; has support for the target
    system's components, and a device-tree file for that target is
    available, a new target system may work just fine.  In these
    cases, the installer can usually provide a working installation,
    and so long as UEFI is in use, it should be able to make the
    system bootable as well. If UEFI is not used you may also need to
    perform some manual configuration steps to make the system
    bootable.
  </para>
  </sect3>
</sect2>


<sect2 arch="armhf" id="armhf-armmp-supported-platforms"><title>Platforms supported by Debian/armhf</title>

  <para>
  The following systems are known to work with &debian;/armhf using the
  multiplatform (armmp) kernel:

  <variablelist>

      <varlistentry>
        <term>Freescale MX53 Quick Start Board (MX53 LOCO Board)</term>
        <listitem>
          <para>   
            The IMX53QSB is a development board based on the i.MX53 SoC.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Versatile Express</term>
        <listitem>
          <para>   
            The Versatile Express is a development board series from ARM
            consisting of a baseboard which can be equipped with various CPU
            daughter boards.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Certain Allwinner sunXi-based development boards and embedded
        systems</term>
        <listitem>
          <para>   
            The armmp kernel supports several development boards and
            embedded systems based on the Allwinner A10 (architecture
            codename <quote>sun4i</quote>), A10s/A13 (architecture
            codename <quote>sun5i</quote>), A20 (architecture
            codename <quote>sun7i</quote>), A31/A31s (architecture
            codename <quote>sun6i</quote>) and A23/A33 (part of the
            <quote>sun8i</quote> family) SoCs.
            
            Full installer support (including provision of ready-made
            SD card images with the installer) is currently available
            for the following sunXi-based systems:

            <itemizedlist>
             <listitem><para>
               Cubietech Cubieboard 1 + 2 / Cubietruck
             </para></listitem>
             <listitem><para>
               LeMaker Banana Pi and Banana Pro
             </para></listitem>
             <listitem><para>
               LinkSprite pcDuino and pcDuino3
             </para></listitem>
             <listitem><para>
               Olimex A10-Olinuxino-LIME / A20-Olinuxino-LIME /
               A20-Olinuxino-LIME2 / A20-Olinuxino Micro / A20-SOM-EVB          
             </para></listitem>
             <listitem><para>
               Xunlong OrangePi Plus
             </para></listitem>
            </itemizedlist>  
          </para>
            
          <para>
            System support for Allwinner sunXi-based devices is
            limited to drivers and device-tree information available
            in the mainline Linux kernel. Vendor-specific kernel
            trees (such as the Allwinner SDK kernels) and the
            android-derived linux-sunxi.org kernel 3.4 series are not
            supported by &debian;.
          </para> 
          <para>
            The mainline Linux kernel generally supports serial
            console, ethernet, SATA, USB and MMC/SD-cards on
            Allwinner A10, A10s/A13, A20, A23/A33 and A31/A31s SoCs. 
            The level of support for local display (HDMI/VGA/LCD) and
            audio hardware varies between individual systems.  For
            most systems, the kernel doesn't have native graphics
            drivers but instead uses the <quote>simplefb</quote>
            infrastructure in which the bootloader initializes the
            display and the kernel just re-uses the pre-initialized
            framebuffer. This generally works reasonably well,
            although it results in certain limitations (the display
            resolution cannot be changed on the fly and display
            powermanagement is not possible).
          </para>
          <para>
            Onboard flash memory intended to be used as a mass
            storage device generally exists in two basic variants on
            sunXi-based systems: raw NAND flash and eMMC flash.  Most
            older sunXi-based boards with onboard flash storage use
            raw NAND flash for which support is not generally
            available in the mainline kernel and therefore also not
            in Debian.  A number of newer systems use eMMC flash
            instead of raw NAND flash.  An eMMC flash chip basically
            appears as a fast, non-removable SD card and is supported
            in the same way as a regular SD card.
          </para>
          
          <para>
            The installer includes basic support for a number of
            sunXi-based systems not listed above, but it is largely
            untested on those systems as the &debian; project doesn't
            have access to the corresponding hardware.  No pre-built
            SD card images with the installer are provided for those
            systems.  Development boards with such limited support
            include:
            <itemizedlist>
              <listitem><para>
                Olimex A10s-Olinuxino Micro / A13-Olinuxino / 
                A13-Olinuxino Micro
              </para></listitem>
              <listitem><para>
                Sinovoip BPI-M2 (A31s-based)
              </para></listitem>
              <listitem><para>
                Xunlong Orange Pi (A20-based) / Orange Pi Mini (A20-based)
              </para></listitem>
            </itemizedlist>
          </para>
          <para>
            In addition to the SoCs and systems listed above, the
            installer has very limited support for the Allwinner H3
            SoC and a number of boards based on it.  Mainline kernel
            support for the H3 is still largely work in progress at
            the time of the Debian 9 release freeze, so the installer
            only supports serial console, MMC/SD and the USB host
            controller on H3-based systems.  There is no driver for
            the on-board ethernet port of the H3 yet, so networking
            is only possible with a USB ethernet adaptor or a USB
            wifi dongle.  Systems based on the H3 for which such very
            basic installer support is available include:
            <itemizedlist>
              <listitem><para>
                FriendlyARM NanoPi NEO
              </para></listitem>
              <listitem><para>
                Xunlong Orange Pi Lite / Orange Pi One / Orange Pi PC /
                Orange Pi PC Plus / Orange Pi Plus / Orange Pi Plus 2E /
                Orange Pi 2
              </para></listitem>
            </itemizedlist>
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>NVIDIA Jetson TK1</term>
        <listitem>
          <para>
            The NVIDIA Jetson TK1 is a developer board based on the Tegra
            K1 chip (also known as Tegra 124).  The Tegra K1 features a
            quad-core 32-bit ARM Cortex-A15 CPU and Kepler GPU (GK20A)
            with 192 CUDA cores.  Other systems based on the Tegra 124
            may work, too.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Seagate Personal Cloud and Seagate NAS</term>
        <listitem>
          <para>
            The Seagate Personal Cloud and Seagate NAS are NAS devices
            based on Marvell's Armada 370 platform.  Debian supports the
            Personal Cloud (SRN21C), Personal Cloud 2-Bay (SRN22C),
            Seagate NAS 2-Bay (SRPD20) and Seagate NAS 4-Bay (SRPD40).
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>SolidRun Cubox-i2eX / Cubox-i4Pro</term>
        <listitem>
          <para>
            The Cubox-i series is a set of small, cubical-shaped systems
            based on the Freescale i.MX6 SoC family.  System support for
            the Cubox-i series is limited to drivers and device-tree
            information available in the mainline Linux kernel; the
            Freescale 3.0 kernel series for the Cubox-i is not supported by
            &debian;.  Available drivers in the mainline kernel include
            serial console, ethernet, USB, MMC/SD-card and display
            support over HDMI (console and X11). In addition to that,
            the eSATA port on the Cubox-i4Pro is supported.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Wandboard</term>
        <listitem>
          <para>
            The Wandboard Quad, Dual and Solo are development boards based on the Freescale
            i.MX6 Quad SoC.  System support is limited to drivers and
            device-tree information available in the mainline Linux kernel;
            the wandboard-specific 3.0 and 3.10 kernel series from
            wandboard.org are not supported by &debian;.  The mainline kernel
            includes driver support for serial console, display via HDMI
            (console and X11), ethernet, USB, MMC/SD, SATA (Quad only) and analog audio.  Support for
            the other audio options (S/PDIF, HDMI-Audio) and for
            the onboard WLAN/Bluetooth module is untested or not available in &debian;
            9.
          </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </para>

  <para>
    
    Generally, the ARM multiplatform support in the Linux kernel
    allows running &d-i; on armhf systems not explicitly listed above,
    as long as the kernel used by &d-i; has support for the target
    system's components and a device-tree file for the target is
    available.  In these cases, the installer can usually provide a
    working installation, but it may not be able to automatically make
    the system bootable. Doing that in many cases requires
    device-specific information.
   
  </para>
  <para>
    When using &d-i; on such systems, you may have to manually make
    the system bootable at the end of the installation, e.g. by
    running the required commands in a shell started from within
    &d-i;.
  </para>

</sect2>

<!--
<sect2 arch="armhf" id="armhf-unsupported-platforms"><title>Platforms no longer supported by Debian/armhf</title>

<variablelist>
<varlistentry>
<term>EfikaMX</term>
<listitem><para>

The EfikaMX platform (Genesi Efika Smartbook and Genesi EfikaMX
nettop) was supported in &debian; 7 with a platform-specific kernel,
but is no longer supported from &debian; 8 onwards.  The code required
to build the formerly used platform-specific kernel has been removed
from the upstream Linux kernel source in 2012, so &debian; cannot
provide newer builds. Using the armmp multiplatform kernel on the
EfikaMX platform would require device-tree support for it, which is
currently not available.

</para></listitem>
</varlistentry>
</variablelist>

</sect2>
-->

<sect2 arch="armel" id="armel-supported-platforms"><title>Platforms supported by Debian/armel</title>

<para>

The following platforms are supported by &debian;/armel; they require
platform-specific kernels.

<variablelist>

<varlistentry>
<term>Kirkwood</term>
<listitem><para>

Kirkwood is a system-on-chip (SoC) from Marvell that integrates an ARM
CPU, Ethernet, SATA, USB, and other functionality in one chip.
&debian; currently supports the following Kirkwood based devices:

    <itemizedlist>
     <listitem><para>
       <ulink url="&url-arm-cyrius-sheevaplug;">Plug computers (SheevaPlug,
       GuruPlug, DreamPlug and Seagate FreeAgent DockStar)</ulink>
     </para></listitem>
     <listitem><para>
      LaCie NASes (Network Space v2, Network Space Max v2, Internet
      Space v2, d2 Network v2, 2Big Network v2 and 5Big Network v2)
     </para></listitem>
     <listitem><para>
       OpenRD (OpenRD-Base, OpenRD-Client and OpenRD-Ultimate)
     </para></listitem>
    </itemizedlist>

</para></listitem>
</varlistentry>

<varlistentry>
<term>Orion5x</term>
<listitem><para>

Orion is a system-on-chip (SoC) from Marvell that integrates an ARM
CPU, Ethernet, SATA, USB, and other functionality in one chip. There
are many Network Attached Storage (NAS) devices on the market that are
based on an Orion chip. &debian; currently supports the following
Orion based devices: <ulink url="&url-arm-cyrius-kuroboxpro;">Buffalo
Kurobox</ulink>.

</para></listitem>
</varlistentry>

<varlistentry>
<term>Versatile</term>
<listitem><para>

The Versatile platform is emulated by QEMU and is therefore a nice way
to test and run &debian; on ARM if you don't have real hardware.

</para></listitem>
</varlistentry>

</variablelist>

</para>
</sect2>

<sect2 arch="armel" id="armel-unsupported-platforms"><title>Devices no longer supported by Debian/armel</title>

<variablelist>

<varlistentry>
<term>Kirkwood</term>
<listitem><para>

Support for all QNAP Turbo Station models (TS-xxx) has been dropped for
&debian; 11, since the Linux kernel for them can no longer being built, due to
hardware limitations.

</para></listitem>
</varlistentry>

<varlistentry>
<term>Orion5x</term>
<listitem><para>

Support for HP Media Vault mv2120 has been dropped for &debian; 11, since the
Linux kernel for it can no longer being built, due to hardware limitations.

</para></listitem>
</varlistentry>

</variablelist>

You may be able to keep above listed devices running for some time, see <ulink
url="https://www.debian.org/releases/bullseye/armel/release-notes/ch-information#no-longer-supported-hardware">the
Release Notes for &debian; 11</ulink>.

</sect2>
